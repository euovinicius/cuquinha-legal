package Trabalhof;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;


public class Game {

    public static void main(String[] args) {

        System.out.println("-----------------bem vindo ao cuquinha legal----------------------");
        System.out.println("---------------- --selecione o menu---------------------------------");
		

        Scanner leia = new Scanner(System.in);

        int menu = 0;
        while (menu != 4) {
            System.out.println();
            System.out.println("1 - iniciar game  \n2 - Como funciona o jogo \n3 - Informações dos desenvolvedores  \n4 - SAIR ");
            menu = lerNumero(leia);
            switch (menu) {
                case 1:

                    Jogador jogador1 = new Jogador();
                    Jogador jogador2 = new Jogador();

                    System.out.println("para podemos iniciar o game , devemos realizar um cadastro dos jogadores.");
          	        System.out.println("\nvamo começar pelo jogador numero 1 :\n");
                    dadoJogador(jogador1, leia);
                    System.out.println("----------------------------") ;
        			
        			System.out.println("o jogador 1 e :"+ jogador1.getNome()+ " Foi cadastrado com sucesso!" ) ;
        		
        			System.out.println("----------------------------") ;
                    
                    //Jogador2
        			System.out.println("agora o jogador numero 2");
                    dadoJogador(jogador2, leia);
                    System.out.println("--------------------------------------------------------------------------");
					System.out.println("O jogador 2 com o nome de:" + jogador2.getNome() + " Foi cadastrado com sucesso!");
					System.out.println("--------------------------------------------------------------------------");

                    jogador1.setPersonagem(selecionarPersonagem(leia, "Player 1", null));
                    jogador2.setPersonagem(selecionarPersonagem(leia, "Player 2", jogador1.getPersonagem()));

                    Jogo perguntas = new Jogo(jogador1, jogador2);
                    perguntas.jogar(leia);

                    break;

                 case 2:
                	 System.out.println("Ola este é o cuquinha legla! Nosso jogo consiste em um quiz entre DOIS persnagens/players sobre: Programação de soluções computacionais.");
                     System.out.println("Cada player devera preencher seus dados e logo após escolher dentre os 5 tipos de alunos como um de seus personagens.");
                     System.out.println("Sendo que nao pode repetir os personagens. Ex.: Player 1 escolheu: Nerd. Player 2 nao podera escolher esse personagem.");
                     System.out.println("Logo em seguida o sistema ira sortear um numero aleatorio para o Player 1 e 2.");
                     System.out.println("O jogador que tirar o MAIOR numero devera começar a partida!");
                     System.out.println("Todo jogador começara a partida com a vida em 100, e a cada pergunta errada diminui 5 em sua vida.");
                     System.out.println("Pula a vez pra o outro Player, quando o Player que começou errar a perguntar, se ele nao errar o jogo continua nele.");
                     System.out.println("O jogo so termina quando a vida de um dos personagens é zerada.");
                     break;
                case 3:
                	System.out.println("______________________________________");
                	System.out.println("| ----------desenvolvedores--------   |");
					System.out.println("|      vinicius almeida fideles       | ");
                    System.out.println("|         jessica teodoro             |");
                    System.out.println("|          thales gabriel             |");
                    System.out.println("|           samuel lima               |");
                    System.out.println("|          cassiano rangel            |");
                    System.out.println("|_____________________________________|");
                    System.out.println("todos nos somos iniciantes nesse mundo da pogramação e estamos cursando o 1 semestre de ciencia da computação ");
                    break;
                    

                case 4:
                    System.out.println("voce saiu \n ");
                    
                    break;

                default:
                    System.out.print("esta opção nao esta no menu tente novamente ");
                    break;
            }
        }
    }

    private static void dadoJogador(Jogador jogador, Scanner leia) {
        System.out.println("insira seu nome por favor?");
        jogador.setNome(leia.nextLine());
        System.out.println("insira seu seu apelido por favor?");
        jogador.setApelido(leia.nextLine());
        System.out.println("insira seu o seu email por favor?");
        jogador.setEmail(leia.nextLine());
        System.out.println("insira seu seu telefone por favor?");
        jogador.setTel(leia.nextLine());
    }

    private static int lerNumero(Scanner leia) {
        try {
            return Integer.parseInt(leia.nextLine());
        } catch (NumberFormatException e) {
            return 0;
        }
    }

    private static Personagem selecionarPersonagem(Scanner leia, String nomeJogador, Personagem excetoPersonagem) {
        Personagem personagem = null;

        ArrayList<Personagem> personagens = new ArrayList<Personagem>(Arrays.asList(Personagem.values()));

        personagens.remove(excetoPersonagem);
        while (personagem == null) {
            System.out.println("Por favor "
                    + nomeJogador
                    + ", escolha um personagem para continuaur.");

            System.out.println(personagens);

            personagem = Personagem.seleciona(lerNumero(leia));

            if (!personagens.contains(personagem)) {
                System.out.println("personagem indisponivel escolha outro :");
                personagem = null;
            } else {
                System.out.println(" voce selecionou o personagem : " + personagem);
            }
        }
        return personagem;
    }
}
